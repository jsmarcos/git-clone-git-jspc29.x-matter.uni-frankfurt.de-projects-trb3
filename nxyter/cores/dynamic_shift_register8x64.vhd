-- VHDL netlist generated by SCUBA Diamond_2.1_Production (100)
-- Module  Version: 4.1
--/usr/local/opt/lattice_diamond/diamond/2.1/ispfpga/bin/lin64/scuba -w -n dynamic_shift_register8x64 -lang vhdl -synth synplify -bus_exp 7 -bb -arch ep5c00 -type shiftreg -width 8 -depth 64 -mode 2 -pipe_final_output -e 

-- Fri Apr 18 13:07:29 2014

library IEEE;
use IEEE.std_logic_1164.all;
-- synopsys translate_off
library ecp3;
use ecp3.components.all;
-- synopsys translate_on

entity dynamic_shift_register8x64 is
    port (
        Din: in  std_logic_vector(7 downto 0); 
        Addr: in  std_logic_vector(5 downto 0); 
        Clock: in  std_logic; 
        ClockEn: in  std_logic; 
        Reset: in  std_logic; 
        Q: out  std_logic_vector(7 downto 0));
end dynamic_shift_register8x64;

architecture Structure of dynamic_shift_register8x64 is

    -- internal signal declarations
    signal shreg_addr_w5_inv: std_logic;
    signal shreg_addr_w4_inv: std_logic;
    signal Reset_inv: std_logic;
    signal scuba_vhi: std_logic;
    signal ishreg_addr_w0: std_logic;
    signal ishreg_addr_w1: std_logic;
    signal sreg_0_ctr_1_ci: std_logic;
    signal ishreg_addr_w2: std_logic;
    signal ishreg_addr_w3: std_logic;
    signal co0: std_logic;
    signal ishreg_addr_w4: std_logic;
    signal ishreg_addr_w5: std_logic;
    signal co2: std_logic;
    signal co1: std_logic;
    signal low_inv: std_logic;
    signal co0_1: std_logic;
    signal co1_1: std_logic;
    signal shreg_addr_w4: std_logic;
    signal co2_1: std_logic;
    signal shreg_addr_w5: std_logic;
    signal scuba_vlo: std_logic;
    signal Q7_ffin: std_logic;
    signal Q6_ffin: std_logic;
    signal Q5_ffin: std_logic;
    signal Q4_ffin: std_logic;
    signal Q3_ffin: std_logic;
    signal Q2_ffin: std_logic;
    signal Q1_ffin: std_logic;
    signal Q0_ffin: std_logic;
    signal shreg_addr_r5: std_logic;
    signal shreg_addr_r4: std_logic;
    signal mdL0_0_7: std_logic;
    signal mdL0_0_6: std_logic;
    signal mdL0_0_5: std_logic;
    signal mdL0_0_4: std_logic;
    signal mdL0_0_3: std_logic;
    signal mdL0_0_2: std_logic;
    signal mdL0_0_1: std_logic;
    signal mdL0_0_0: std_logic;
    signal dec0_wre3: std_logic;
    signal mdL0_1_7: std_logic;
    signal mdL0_1_6: std_logic;
    signal mdL0_1_5: std_logic;
    signal mdL0_1_4: std_logic;
    signal mdL0_1_3: std_logic;
    signal mdL0_1_2: std_logic;
    signal mdL0_1_1: std_logic;
    signal mdL0_1_0: std_logic;
    signal dec1_wre7: std_logic;
    signal mdL0_2_7: std_logic;
    signal mdL0_2_6: std_logic;
    signal mdL0_2_5: std_logic;
    signal mdL0_2_4: std_logic;
    signal mdL0_2_3: std_logic;
    signal mdL0_2_2: std_logic;
    signal mdL0_2_1: std_logic;
    signal mdL0_2_0: std_logic;
    signal dec2_wre11: std_logic;
    signal mdL0_3_7: std_logic;
    signal mdL0_3_6: std_logic;
    signal mdL0_3_5: std_logic;
    signal mdL0_3_4: std_logic;
    signal mdL0_3_3: std_logic;
    signal mdL0_3_2: std_logic;
    signal mdL0_3_1: std_logic;
    signal mdL0_3_0: std_logic;
    signal shreg_addr_r3: std_logic;
    signal shreg_addr_r2: std_logic;
    signal shreg_addr_r1: std_logic;
    signal shreg_addr_r0: std_logic;
    signal dec3_wre15: std_logic;
    signal shreg_addr_w3: std_logic;
    signal shreg_addr_w2: std_logic;
    signal shreg_addr_w1: std_logic;
    signal shreg_addr_w0: std_logic;

    -- local component declarations
    component CU2
        port (CI: in  std_logic; PC0: in  std_logic; PC1: in  std_logic; 
            CO: out  std_logic; NC0: out  std_logic; NC1: out  std_logic);
    end component;
    component FADD2B
        port (A0: in  std_logic; A1: in  std_logic; B0: in  std_logic; 
            B1: in  std_logic; CI: in  std_logic; COUT: out  std_logic; 
            S0: out  std_logic; S1: out  std_logic);
    end component;
    component FSUB2B
        port (A0: in  std_logic; A1: in  std_logic; B0: in  std_logic; 
            B1: in  std_logic; BI: in  std_logic; BOUT: out  std_logic; 
            S0: out  std_logic; S1: out  std_logic);
    end component;
    component FD1P3DX
        port (D: in  std_logic; SP: in  std_logic; CK: in  std_logic; 
            CD: in  std_logic; Q: out  std_logic);
    end component;
    component INV
        port (A: in  std_logic; Z: out  std_logic);
    end component;
    component MUX41
        port (D0: in  std_logic; D1: in  std_logic; D2: in  std_logic; 
            D3: in  std_logic; SD1: in  std_logic; SD2: in  std_logic; 
            Z: out  std_logic);
    end component;
    component ROM16X1A
        generic (INITVAL : in std_logic_vector(15 downto 0));
        port (AD3: in  std_logic; AD2: in  std_logic; AD1: in  std_logic; 
            AD0: in  std_logic; DO0: out  std_logic);
    end component;
    component DPR16X4C
        generic (INITVAL : in String);
        port (DI0: in  std_logic; DI1: in  std_logic; DI2: in  std_logic; 
            DI3: in  std_logic; WCK: in  std_logic; WRE: in  std_logic; 
            RAD0: in  std_logic; RAD1: in  std_logic; 
            RAD2: in  std_logic; RAD3: in  std_logic; 
            WAD0: in  std_logic; WAD1: in  std_logic; 
            WAD2: in  std_logic; WAD3: in  std_logic; 
            DO0: out  std_logic; DO1: out  std_logic; 
            DO2: out  std_logic; DO3: out  std_logic);
    end component;
    component VHI
        port (Z: out  std_logic);
    end component;
    component VLO
        port (Z: out  std_logic);
    end component;
    attribute GSR : string; 
    attribute MEM_INIT_FILE : string; 
    attribute MEM_LPC_FILE : string; 
    attribute COMP : string; 
    attribute GSR of FF_13 : label is "ENABLED";
    attribute GSR of FF_12 : label is "ENABLED";
    attribute GSR of FF_11 : label is "ENABLED";
    attribute GSR of FF_10 : label is "ENABLED";
    attribute GSR of FF_9 : label is "ENABLED";
    attribute GSR of FF_8 : label is "ENABLED";
    attribute GSR of FF_7 : label is "ENABLED";
    attribute GSR of FF_6 : label is "ENABLED";
    attribute GSR of FF_5 : label is "ENABLED";
    attribute GSR of FF_4 : label is "ENABLED";
    attribute GSR of FF_3 : label is "ENABLED";
    attribute GSR of FF_2 : label is "ENABLED";
    attribute GSR of FF_1 : label is "ENABLED";
    attribute GSR of FF_0 : label is "ENABLED";
    attribute MEM_INIT_FILE of sram_1_0_0 : label is "(0-15)(0-3)";
    attribute MEM_LPC_FILE of sram_1_0_0 : label is "dynamic_shift_register8x64.lpc";
    attribute COMP of sram_1_0_0 : label is "sram_1_0_0";
    attribute MEM_INIT_FILE of sram_1_0_1 : label is "(0-15)(4-7)";
    attribute MEM_LPC_FILE of sram_1_0_1 : label is "dynamic_shift_register8x64.lpc";
    attribute COMP of sram_1_0_1 : label is "sram_1_0_1";
    attribute MEM_INIT_FILE of sram_1_1_0 : label is "(16-31)(0-3)";
    attribute MEM_LPC_FILE of sram_1_1_0 : label is "dynamic_shift_register8x64.lpc";
    attribute COMP of sram_1_1_0 : label is "sram_1_1_0";
    attribute MEM_INIT_FILE of sram_1_1_1 : label is "(16-31)(4-7)";
    attribute MEM_LPC_FILE of sram_1_1_1 : label is "dynamic_shift_register8x64.lpc";
    attribute COMP of sram_1_1_1 : label is "sram_1_1_1";
    attribute MEM_INIT_FILE of sram_1_2_0 : label is "(32-47)(0-3)";
    attribute MEM_LPC_FILE of sram_1_2_0 : label is "dynamic_shift_register8x64.lpc";
    attribute COMP of sram_1_2_0 : label is "sram_1_2_0";
    attribute MEM_INIT_FILE of sram_1_2_1 : label is "(32-47)(4-7)";
    attribute MEM_LPC_FILE of sram_1_2_1 : label is "dynamic_shift_register8x64.lpc";
    attribute COMP of sram_1_2_1 : label is "sram_1_2_1";
    attribute MEM_INIT_FILE of sram_1_3_0 : label is "(48-63)(0-3)";
    attribute MEM_LPC_FILE of sram_1_3_0 : label is "dynamic_shift_register8x64.lpc";
    attribute COMP of sram_1_3_0 : label is "sram_1_3_0";
    attribute MEM_INIT_FILE of sram_1_3_1 : label is "(48-63)(4-7)";
    attribute MEM_LPC_FILE of sram_1_3_1 : label is "dynamic_shift_register8x64.lpc";
    attribute COMP of sram_1_3_1 : label is "sram_1_3_1";
    attribute NGD_DRC_MASK : integer;
    attribute NGD_DRC_MASK of Structure : architecture is 1;

begin
    -- component instantiation statements
    INV_3: INV
        port map (A=>Reset, Z=>Reset_inv);

    INV_2: INV
        port map (A=>scuba_vlo, Z=>low_inv);

    INV_1: INV
        port map (A=>shreg_addr_w4, Z=>shreg_addr_w4_inv);

    INV_0: INV
        port map (A=>shreg_addr_w5, Z=>shreg_addr_w5_inv);

    LUT4_3: ROM16X1A
        generic map (initval=> X"8000")
        port map (AD3=>Reset_inv, AD2=>ClockEn, AD1=>shreg_addr_w4_inv, 
            AD0=>shreg_addr_w5_inv, DO0=>dec0_wre3);

    LUT4_2: ROM16X1A
        generic map (initval=> X"8000")
        port map (AD3=>Reset_inv, AD2=>ClockEn, AD1=>shreg_addr_w4, 
            AD0=>shreg_addr_w5_inv, DO0=>dec1_wre7);

    LUT4_1: ROM16X1A
        generic map (initval=> X"8000")
        port map (AD3=>Reset_inv, AD2=>ClockEn, AD1=>shreg_addr_w4_inv, 
            AD0=>shreg_addr_w5, DO0=>dec2_wre11);

    LUT4_0: ROM16X1A
        generic map (initval=> X"8000")
        port map (AD3=>Reset_inv, AD2=>ClockEn, AD1=>shreg_addr_w4, 
            AD0=>shreg_addr_w5, DO0=>dec3_wre15);

    FF_13: FD1P3DX
        port map (D=>ishreg_addr_w0, SP=>ClockEn, CK=>Clock, CD=>Reset, 
            Q=>shreg_addr_w0);

    FF_12: FD1P3DX
        port map (D=>ishreg_addr_w1, SP=>ClockEn, CK=>Clock, CD=>Reset, 
            Q=>shreg_addr_w1);

    FF_11: FD1P3DX
        port map (D=>ishreg_addr_w2, SP=>ClockEn, CK=>Clock, CD=>Reset, 
            Q=>shreg_addr_w2);

    FF_10: FD1P3DX
        port map (D=>ishreg_addr_w3, SP=>ClockEn, CK=>Clock, CD=>Reset, 
            Q=>shreg_addr_w3);

    FF_9: FD1P3DX
        port map (D=>ishreg_addr_w4, SP=>ClockEn, CK=>Clock, CD=>Reset, 
            Q=>shreg_addr_w4);

    FF_8: FD1P3DX
        port map (D=>ishreg_addr_w5, SP=>ClockEn, CK=>Clock, CD=>Reset, 
            Q=>shreg_addr_w5);

    FF_7: FD1P3DX
        port map (D=>Q7_ffin, SP=>ClockEn, CK=>Clock, CD=>Reset, Q=>Q(7));

    FF_6: FD1P3DX
        port map (D=>Q6_ffin, SP=>ClockEn, CK=>Clock, CD=>Reset, Q=>Q(6));

    FF_5: FD1P3DX
        port map (D=>Q5_ffin, SP=>ClockEn, CK=>Clock, CD=>Reset, Q=>Q(5));

    FF_4: FD1P3DX
        port map (D=>Q4_ffin, SP=>ClockEn, CK=>Clock, CD=>Reset, Q=>Q(4));

    FF_3: FD1P3DX
        port map (D=>Q3_ffin, SP=>ClockEn, CK=>Clock, CD=>Reset, Q=>Q(3));

    FF_2: FD1P3DX
        port map (D=>Q2_ffin, SP=>ClockEn, CK=>Clock, CD=>Reset, Q=>Q(2));

    FF_1: FD1P3DX
        port map (D=>Q1_ffin, SP=>ClockEn, CK=>Clock, CD=>Reset, Q=>Q(1));

    FF_0: FD1P3DX
        port map (D=>Q0_ffin, SP=>ClockEn, CK=>Clock, CD=>Reset, Q=>Q(0));

    scuba_vhi_inst: VHI
        port map (Z=>scuba_vhi);

    sreg_0_ctr_1_cia: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vhi, B0=>scuba_vlo, 
            B1=>scuba_vhi, CI=>scuba_vlo, COUT=>sreg_0_ctr_1_ci, 
            S0=>open, S1=>open);

    sreg_0_ctr_1_0: CU2
        port map (CI=>sreg_0_ctr_1_ci, PC0=>shreg_addr_w0, 
            PC1=>shreg_addr_w1, CO=>co0, NC0=>ishreg_addr_w0, 
            NC1=>ishreg_addr_w1);

    sreg_0_ctr_1_1: CU2
        port map (CI=>co0, PC0=>shreg_addr_w2, PC1=>shreg_addr_w3, 
            CO=>co1, NC0=>ishreg_addr_w2, NC1=>ishreg_addr_w3);

    sreg_0_ctr_1_2: CU2
        port map (CI=>co1, PC0=>shreg_addr_w4, PC1=>shreg_addr_w5, 
            CO=>co2, NC0=>ishreg_addr_w4, NC1=>ishreg_addr_w5);

    raddr_sub_1_0: FSUB2B
        port map (A0=>scuba_vlo, A1=>shreg_addr_w0, B0=>low_inv, 
            B1=>Addr(0), BI=>scuba_vlo, BOUT=>co0_1, S0=>open, 
            S1=>shreg_addr_r0);

    raddr_sub_1_1: FSUB2B
        port map (A0=>shreg_addr_w1, A1=>shreg_addr_w2, B0=>Addr(1), 
            B1=>Addr(2), BI=>co0_1, BOUT=>co1_1, S0=>shreg_addr_r1, 
            S1=>shreg_addr_r2);

    raddr_sub_1_2: FSUB2B
        port map (A0=>shreg_addr_w3, A1=>shreg_addr_w4, B0=>Addr(3), 
            B1=>Addr(4), BI=>co1_1, BOUT=>co2_1, S0=>shreg_addr_r3, 
            S1=>shreg_addr_r4);

    scuba_vlo_inst: VLO
        port map (Z=>scuba_vlo);

    raddr_sub_1_3: FSUB2B
        port map (A0=>shreg_addr_w5, A1=>scuba_vlo, B0=>Addr(5), 
            B1=>scuba_vlo, BI=>co2_1, BOUT=>open, S0=>shreg_addr_r5, 
            S1=>open);

    mux_7: MUX41
        port map (D0=>mdL0_0_7, D1=>mdL0_1_7, D2=>mdL0_2_7, D3=>mdL0_3_7, 
            SD1=>shreg_addr_r4, SD2=>shreg_addr_r5, Z=>Q7_ffin);

    mux_6: MUX41
        port map (D0=>mdL0_0_6, D1=>mdL0_1_6, D2=>mdL0_2_6, D3=>mdL0_3_6, 
            SD1=>shreg_addr_r4, SD2=>shreg_addr_r5, Z=>Q6_ffin);

    mux_5: MUX41
        port map (D0=>mdL0_0_5, D1=>mdL0_1_5, D2=>mdL0_2_5, D3=>mdL0_3_5, 
            SD1=>shreg_addr_r4, SD2=>shreg_addr_r5, Z=>Q5_ffin);

    mux_4: MUX41
        port map (D0=>mdL0_0_4, D1=>mdL0_1_4, D2=>mdL0_2_4, D3=>mdL0_3_4, 
            SD1=>shreg_addr_r4, SD2=>shreg_addr_r5, Z=>Q4_ffin);

    mux_3: MUX41
        port map (D0=>mdL0_0_3, D1=>mdL0_1_3, D2=>mdL0_2_3, D3=>mdL0_3_3, 
            SD1=>shreg_addr_r4, SD2=>shreg_addr_r5, Z=>Q3_ffin);

    mux_2: MUX41
        port map (D0=>mdL0_0_2, D1=>mdL0_1_2, D2=>mdL0_2_2, D3=>mdL0_3_2, 
            SD1=>shreg_addr_r4, SD2=>shreg_addr_r5, Z=>Q2_ffin);

    mux_1: MUX41
        port map (D0=>mdL0_0_1, D1=>mdL0_1_1, D2=>mdL0_2_1, D3=>mdL0_3_1, 
            SD1=>shreg_addr_r4, SD2=>shreg_addr_r5, Z=>Q1_ffin);

    mux_0: MUX41
        port map (D0=>mdL0_0_0, D1=>mdL0_1_0, D2=>mdL0_2_0, D3=>mdL0_3_0, 
            SD1=>shreg_addr_r4, SD2=>shreg_addr_r5, Z=>Q0_ffin);

    sram_1_0_0: DPR16X4C
        generic map (initval=> "0x0000000000000000")
        port map (DI0=>Din(4), DI1=>Din(5), DI2=>Din(6), DI3=>Din(7), 
            WCK=>Clock, WRE=>dec0_wre3, RAD0=>shreg_addr_r0, 
            RAD1=>shreg_addr_r1, RAD2=>shreg_addr_r2, 
            RAD3=>shreg_addr_r3, WAD0=>shreg_addr_w0, 
            WAD1=>shreg_addr_w1, WAD2=>shreg_addr_w2, 
            WAD3=>shreg_addr_w3, DO0=>mdL0_0_4, DO1=>mdL0_0_5, 
            DO2=>mdL0_0_6, DO3=>mdL0_0_7);

    sram_1_0_1: DPR16X4C
        generic map (initval=> "0x0000000000000000")
        port map (DI0=>Din(0), DI1=>Din(1), DI2=>Din(2), DI3=>Din(3), 
            WCK=>Clock, WRE=>dec0_wre3, RAD0=>shreg_addr_r0, 
            RAD1=>shreg_addr_r1, RAD2=>shreg_addr_r2, 
            RAD3=>shreg_addr_r3, WAD0=>shreg_addr_w0, 
            WAD1=>shreg_addr_w1, WAD2=>shreg_addr_w2, 
            WAD3=>shreg_addr_w3, DO0=>mdL0_0_0, DO1=>mdL0_0_1, 
            DO2=>mdL0_0_2, DO3=>mdL0_0_3);

    sram_1_1_0: DPR16X4C
        generic map (initval=> "0x0000000000000000")
        port map (DI0=>Din(4), DI1=>Din(5), DI2=>Din(6), DI3=>Din(7), 
            WCK=>Clock, WRE=>dec1_wre7, RAD0=>shreg_addr_r0, 
            RAD1=>shreg_addr_r1, RAD2=>shreg_addr_r2, 
            RAD3=>shreg_addr_r3, WAD0=>shreg_addr_w0, 
            WAD1=>shreg_addr_w1, WAD2=>shreg_addr_w2, 
            WAD3=>shreg_addr_w3, DO0=>mdL0_1_4, DO1=>mdL0_1_5, 
            DO2=>mdL0_1_6, DO3=>mdL0_1_7);

    sram_1_1_1: DPR16X4C
        generic map (initval=> "0x0000000000000000")
        port map (DI0=>Din(0), DI1=>Din(1), DI2=>Din(2), DI3=>Din(3), 
            WCK=>Clock, WRE=>dec1_wre7, RAD0=>shreg_addr_r0, 
            RAD1=>shreg_addr_r1, RAD2=>shreg_addr_r2, 
            RAD3=>shreg_addr_r3, WAD0=>shreg_addr_w0, 
            WAD1=>shreg_addr_w1, WAD2=>shreg_addr_w2, 
            WAD3=>shreg_addr_w3, DO0=>mdL0_1_0, DO1=>mdL0_1_1, 
            DO2=>mdL0_1_2, DO3=>mdL0_1_3);

    sram_1_2_0: DPR16X4C
        generic map (initval=> "0x0000000000000000")
        port map (DI0=>Din(4), DI1=>Din(5), DI2=>Din(6), DI3=>Din(7), 
            WCK=>Clock, WRE=>dec2_wre11, RAD0=>shreg_addr_r0, 
            RAD1=>shreg_addr_r1, RAD2=>shreg_addr_r2, 
            RAD3=>shreg_addr_r3, WAD0=>shreg_addr_w0, 
            WAD1=>shreg_addr_w1, WAD2=>shreg_addr_w2, 
            WAD3=>shreg_addr_w3, DO0=>mdL0_2_4, DO1=>mdL0_2_5, 
            DO2=>mdL0_2_6, DO3=>mdL0_2_7);

    sram_1_2_1: DPR16X4C
        generic map (initval=> "0x0000000000000000")
        port map (DI0=>Din(0), DI1=>Din(1), DI2=>Din(2), DI3=>Din(3), 
            WCK=>Clock, WRE=>dec2_wre11, RAD0=>shreg_addr_r0, 
            RAD1=>shreg_addr_r1, RAD2=>shreg_addr_r2, 
            RAD3=>shreg_addr_r3, WAD0=>shreg_addr_w0, 
            WAD1=>shreg_addr_w1, WAD2=>shreg_addr_w2, 
            WAD3=>shreg_addr_w3, DO0=>mdL0_2_0, DO1=>mdL0_2_1, 
            DO2=>mdL0_2_2, DO3=>mdL0_2_3);

    sram_1_3_0: DPR16X4C
        generic map (initval=> "0x0000000000000000")
        port map (DI0=>Din(4), DI1=>Din(5), DI2=>Din(6), DI3=>Din(7), 
            WCK=>Clock, WRE=>dec3_wre15, RAD0=>shreg_addr_r0, 
            RAD1=>shreg_addr_r1, RAD2=>shreg_addr_r2, 
            RAD3=>shreg_addr_r3, WAD0=>shreg_addr_w0, 
            WAD1=>shreg_addr_w1, WAD2=>shreg_addr_w2, 
            WAD3=>shreg_addr_w3, DO0=>mdL0_3_4, DO1=>mdL0_3_5, 
            DO2=>mdL0_3_6, DO3=>mdL0_3_7);

    sram_1_3_1: DPR16X4C
        generic map (initval=> "0x0000000000000000")
        port map (DI0=>Din(0), DI1=>Din(1), DI2=>Din(2), DI3=>Din(3), 
            WCK=>Clock, WRE=>dec3_wre15, RAD0=>shreg_addr_r0, 
            RAD1=>shreg_addr_r1, RAD2=>shreg_addr_r2, 
            RAD3=>shreg_addr_r3, WAD0=>shreg_addr_w0, 
            WAD1=>shreg_addr_w1, WAD2=>shreg_addr_w2, 
            WAD3=>shreg_addr_w3, DO0=>mdL0_3_0, DO1=>mdL0_3_1, 
            DO2=>mdL0_3_2, DO3=>mdL0_3_3);

end Structure;

-- synopsys translate_off
library ecp3;
configuration Structure_CON of dynamic_shift_register8x64 is
    for Structure
        for all:CU2 use entity ecp3.CU2(V); end for;
        for all:FADD2B use entity ecp3.FADD2B(V); end for;
        for all:FSUB2B use entity ecp3.FSUB2B(V); end for;
        for all:FD1P3DX use entity ecp3.FD1P3DX(V); end for;
        for all:INV use entity ecp3.INV(V); end for;
        for all:MUX41 use entity ecp3.MUX41(V); end for;
        for all:ROM16X1A use entity ecp3.ROM16X1A(V); end for;
        for all:DPR16X4C use entity ecp3.DPR16X4C(V); end for;
        for all:VHI use entity ecp3.VHI(V); end for;
        for all:VLO use entity ecp3.VLO(V); end for;
    end for;
end Structure_CON;

-- synopsys translate_on
