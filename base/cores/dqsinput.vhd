-- VHDL netlist generated by SCUBA Diamond_2.2_Production (99)
-- Module  Version: 5.4
--/d/jspc29/lattice/diamond/2.2_x64/ispfpga/bin/lin64/scuba -w -n dqsinput -lang vhdl -synth synplify -bus_exp 7 -bb -arch ep5c00 -type iol -mode in -io_type LVDS25 -width 5 -freq_in 192 -gear 2 -clk dqs -dqs 1 5 -dqs 2 5 -e 

-- Wed Oct  2 23:39:53 2013

library IEEE;
use IEEE.std_logic_1164.all;
-- synopsys translate_off
library ecp3;
use ecp3.components.all;
-- synopsys translate_on

entity dqsinput is
    port (
        clk_0: in  std_logic; 
        clk_1: in  std_logic; 
        clkdiv_reset: in  std_logic; 
        eclk: in  std_logic; 
        reset_0: in  std_logic; 
        reset_1: in  std_logic; 
        sclk: out  std_logic; 
        datain_0: in  std_logic_vector(4 downto 0); 
        datain_1: in  std_logic_vector(4 downto 0); 
        q_0: out  std_logic_vector(19 downto 0); 
        q_1: out  std_logic_vector(19 downto 0));
 attribute dont_touch : boolean;
 attribute dont_touch of dqsinput : entity is true;
end dqsinput;

architecture Structure of dqsinput is

    -- internal signal declarations
    signal datain_1i_t4: std_logic;
    signal datain_1i_t3: std_logic;
    signal datain_1i_t2: std_logic;
    signal datain_1i_t1: std_logic;
    signal datain_1i_t0: std_logic;
    signal buf_datain_1i4: std_logic;
    signal buf_datain_1i3: std_logic;
    signal buf_datain_1i2: std_logic;
    signal buf_datain_1i1: std_logic;
    signal buf_datain_1i0: std_logic;
    signal datain_0i_t4: std_logic;
    signal datain_0i_t3: std_logic;
    signal datain_0i_t2: std_logic;
    signal datain_0i_t1: std_logic;
    signal datain_0i_t0: std_logic;
    signal buf_datain_0i4: std_logic;
    signal buf_datain_0i3: std_logic;
    signal buf_datain_0i2: std_logic;
    signal buf_datain_0i1: std_logic;
    signal buf_datain_0i0: std_logic;
    signal qb19: std_logic;
    signal qa19: std_logic;
    signal qb09: std_logic;
    signal qa09: std_logic;
    signal datain_t9: std_logic;
    signal qb18: std_logic;
    signal qa18: std_logic;
    signal qb08: std_logic;
    signal qa08: std_logic;
    signal datain_t8: std_logic;
    signal qb17: std_logic;
    signal qa17: std_logic;
    signal qb07: std_logic;
    signal qa07: std_logic;
    signal datain_t7: std_logic;
    signal qb16: std_logic;
    signal qa16: std_logic;
    signal qb06: std_logic;
    signal qa06: std_logic;
    signal datain_t6: std_logic;
    signal qb15: std_logic;
    signal qa15: std_logic;
    signal qb05: std_logic;
    signal qa05: std_logic;
    signal datain_t5: std_logic;
    signal qb14: std_logic;
    signal qa14: std_logic;
    signal qb04: std_logic;
    signal qa04: std_logic;
    signal datain_t4: std_logic;
    signal qb13: std_logic;
    signal qa13: std_logic;
    signal qb03: std_logic;
    signal qa03: std_logic;
    signal datain_t3: std_logic;
    signal qb12: std_logic;
    signal qa12: std_logic;
    signal qb02: std_logic;
    signal qa02: std_logic;
    signal datain_t2: std_logic;
    signal qb11: std_logic;
    signal qa11: std_logic;
    signal qb01: std_logic;
    signal qa01: std_logic;
    signal datain_t1: std_logic;
    signal qb10: std_logic;
    signal qa10: std_logic;
    signal qb00: std_logic;
    signal qa00: std_logic;
    signal datain_t0: std_logic;
    signal dqclk11: std_logic;
    signal dqclk01: std_logic;
    signal eclkdqsr1: std_logic;
    signal ddrlat1: std_logic;
    signal datavalid1: std_logic;
    signal prmbdet1: std_logic;
    signal ddrclkpol1: std_logic;
    signal dqsw1: std_logic;
    signal dqclk10: std_logic;
    signal dqclk00: std_logic;
    signal eclkdqsr0: std_logic;
    signal ddrlat0: std_logic;
    signal datavalid0: std_logic;
    signal prmbdet0: std_logic;
    signal ddrclkpol0: std_logic;
    signal dqsw0: std_logic;
    signal scuba_vlo: std_logic;
    signal dqsdel: std_logic;
    signal dqsdll_lock: std_logic;
    signal dqsdll_uddcntln: std_logic;
    signal dqsdll_reset: std_logic;
    signal clkos: std_logic;
    signal cdiv8: std_logic;
    signal cdiv4: std_logic;
    signal cdiv1: std_logic;
    signal scuba_vhi: std_logic;
    signal clkok: std_logic;
    signal buf_clk_1: std_logic;
    signal buf_clk_0: std_logic;
    signal sclk_t: std_logic;

    -- local component declarations
    component VHI
        port (Z: out  std_logic);
    end component;
    component VLO
        port (Z: out  std_logic);
    end component;
    component IB
        port (I: in  std_logic; O: out  std_logic);
    end component;
    component CLKDIVB
        port (CLKI: in  std_logic; RST: in  std_logic; 
            RELEASE: in  std_logic; CDIV1: out  std_logic; 
            CDIV2: out  std_logic; CDIV4: out  std_logic; 
            CDIV8: out  std_logic);
    end component;
    component IDDRX2D
        generic (DELAYMODE : in String; SCLKLATENCY : in Integer);
        port (D: in  std_logic; SCLK: in  std_logic; ECLK: in  std_logic; 
            ECLKDQSR: in  std_logic; DDRLAT: in  std_logic; 
            DDRCLKPOL: in  std_logic; QA0: out  std_logic; 
            QB0: out  std_logic; QA1: out  std_logic; 
            QB1: out  std_logic);
    end component;
    component DQSBUFD
        generic (NRZMODE : in String; DYNDEL_CNTL : in String; 
                DYNDEL_VAL : in Integer; DYNDEL_TYPE : in String);
        port (DQSI: in  std_logic; SCLK: in  std_logic; 
            READ: in  std_logic; DQSDEL: in  std_logic; 
            ECLK: in  std_logic; ECLKW: in  std_logic; 
            RST: in  std_logic; DYNDELPOL: in  std_logic; 
            DYNDELAY6: in  std_logic; DYNDELAY5: in  std_logic; 
            DYNDELAY4: in  std_logic; DYNDELAY3: in  std_logic; 
            DYNDELAY2: in  std_logic; DYNDELAY1: in  std_logic; 
            DYNDELAY0: in  std_logic; DQSW: out  std_logic; 
            DDRCLKPOL: out  std_logic; PRMBDET: out  std_logic; 
            DATAVALID: out  std_logic; DDRLAT: out  std_logic; 
            ECLKDQSR: out  std_logic; DQCLK0: out  std_logic; 
            DQCLK1: out  std_logic);
    end component;
    component DQSDLLB
        generic (LOCK_SENSITIVITY : in String);
        port (CLK: in  std_logic; RST: in  std_logic; 
            UDDCNTLN: in  std_logic; LOCK: out  std_logic; 
            DQSDEL: out  std_logic);
    end component;
    component DELAYC
        port (A: in  std_logic; Z: out  std_logic);
    end component;
    attribute IDDRAPPS : string; 
    attribute IO_TYPE : string; 
    attribute IO_TYPE of Inst6_IB4 : label is "LVDS25";
    attribute IO_TYPE of Inst6_IB3 : label is "LVDS25";
    attribute IO_TYPE of Inst6_IB2 : label is "LVDS25";
    attribute IO_TYPE of Inst6_IB1 : label is "LVDS25";
    attribute IO_TYPE of Inst6_IB0 : label is "LVDS25";
    attribute IO_TYPE of Inst5_IB4 : label is "LVDS25";
    attribute IO_TYPE of Inst5_IB3 : label is "LVDS25";
    attribute IO_TYPE of Inst5_IB2 : label is "LVDS25";
    attribute IO_TYPE of Inst5_IB1 : label is "LVDS25";
    attribute IO_TYPE of Inst5_IB0 : label is "LVDS25";
    attribute IDDRAPPS of Inst_IDDRX2D_1_4 : label is "DQS_CENTERED";
    attribute IDDRAPPS of Inst_IDDRX2D_1_3 : label is "DQS_CENTERED";
    attribute IDDRAPPS of Inst_IDDRX2D_1_2 : label is "DQS_CENTERED";
    attribute IDDRAPPS of Inst_IDDRX2D_1_1 : label is "DQS_CENTERED";
    attribute IDDRAPPS of Inst_IDDRX2D_1_0 : label is "DQS_CENTERED";
    attribute IDDRAPPS of Inst_IDDRX2D_0_4 : label is "DQS_CENTERED";
    attribute IDDRAPPS of Inst_IDDRX2D_0_3 : label is "DQS_CENTERED";
    attribute IDDRAPPS of Inst_IDDRX2D_0_2 : label is "DQS_CENTERED";
    attribute IDDRAPPS of Inst_IDDRX2D_0_1 : label is "DQS_CENTERED";
    attribute IDDRAPPS of Inst_IDDRX2D_0_0 : label is "DQS_CENTERED";
    attribute IO_TYPE of Inst1_IB1 : label is "LVDS25";
    attribute IO_TYPE of Inst1_IB0 : label is "LVDS25";
    attribute syn_keep : boolean;
    attribute syn_noprune : boolean;
    attribute syn_noprune of Structure : architecture is true;
    attribute NGD_DRC_MASK : integer;
    attribute NGD_DRC_MASK of Structure : architecture is 1;

begin
    -- component instantiation statements
    udel_datain_1i4: DELAYC
        port map (A=>buf_datain_1i4, Z=>datain_1i_t4);

    udel_datain_1i3: DELAYC
        port map (A=>buf_datain_1i3, Z=>datain_1i_t3);

    udel_datain_1i2: DELAYC
        port map (A=>buf_datain_1i2, Z=>datain_1i_t2);

    udel_datain_1i1: DELAYC
        port map (A=>buf_datain_1i1, Z=>datain_1i_t1);

    udel_datain_1i0: DELAYC
        port map (A=>buf_datain_1i0, Z=>datain_1i_t0);

    Inst6_IB4: IB
        port map (I=>datain_1(4), O=>buf_datain_1i4);

    Inst6_IB3: IB
        port map (I=>datain_1(3), O=>buf_datain_1i3);

    Inst6_IB2: IB
        port map (I=>datain_1(2), O=>buf_datain_1i2);

    Inst6_IB1: IB
        port map (I=>datain_1(1), O=>buf_datain_1i1);

    Inst6_IB0: IB
        port map (I=>datain_1(0), O=>buf_datain_1i0);

    udel_datain_0i4: DELAYC
        port map (A=>buf_datain_0i4, Z=>datain_0i_t4);

    udel_datain_0i3: DELAYC
        port map (A=>buf_datain_0i3, Z=>datain_0i_t3);

    udel_datain_0i2: DELAYC
        port map (A=>buf_datain_0i2, Z=>datain_0i_t2);

    udel_datain_0i1: DELAYC
        port map (A=>buf_datain_0i1, Z=>datain_0i_t1);

    udel_datain_0i0: DELAYC
        port map (A=>buf_datain_0i0, Z=>datain_0i_t0);

    Inst5_IB4: IB
        port map (I=>datain_0(4), O=>buf_datain_0i4);

    Inst5_IB3: IB
        port map (I=>datain_0(3), O=>buf_datain_0i3);

    Inst5_IB2: IB
        port map (I=>datain_0(2), O=>buf_datain_0i2);

    Inst5_IB1: IB
        port map (I=>datain_0(1), O=>buf_datain_0i1);

    Inst5_IB0: IB
        port map (I=>datain_0(0), O=>buf_datain_0i0);

    Inst_IDDRX2D_1_4: IDDRX2D
        generic map (DELAYMODE=> "CENTERED", SCLKLATENCY=>  1)
        port map (D=>datain_t9, SCLK=>clkok, ECLK=>clkos, 
            ECLKDQSR=>eclkdqsr1, DDRLAT=>ddrlat1, DDRCLKPOL=>ddrclkpol1, 
            QA0=>qa09, QB0=>qb09, QA1=>qa19, QB1=>qb19);

    Inst_IDDRX2D_1_3: IDDRX2D
        generic map (DELAYMODE=> "CENTERED", SCLKLATENCY=>  1)
        port map (D=>datain_t8, SCLK=>clkok, ECLK=>clkos, 
            ECLKDQSR=>eclkdqsr1, DDRLAT=>ddrlat1, DDRCLKPOL=>ddrclkpol1, 
            QA0=>qa08, QB0=>qb08, QA1=>qa18, QB1=>qb18);

    Inst_IDDRX2D_1_2: IDDRX2D
        generic map (DELAYMODE=> "CENTERED", SCLKLATENCY=>  1)
        port map (D=>datain_t7, SCLK=>clkok, ECLK=>clkos, 
            ECLKDQSR=>eclkdqsr1, DDRLAT=>ddrlat1, DDRCLKPOL=>ddrclkpol1, 
            QA0=>qa07, QB0=>qb07, QA1=>qa17, QB1=>qb17);

    Inst_IDDRX2D_1_1: IDDRX2D
        generic map (DELAYMODE=> "CENTERED", SCLKLATENCY=>  1)
        port map (D=>datain_t6, SCLK=>clkok, ECLK=>clkos, 
            ECLKDQSR=>eclkdqsr1, DDRLAT=>ddrlat1, DDRCLKPOL=>ddrclkpol1, 
            QA0=>qa06, QB0=>qb06, QA1=>qa16, QB1=>qb16);

    Inst_IDDRX2D_1_0: IDDRX2D
        generic map (DELAYMODE=> "CENTERED", SCLKLATENCY=>  1)
        port map (D=>datain_t5, SCLK=>clkok, ECLK=>clkos, 
            ECLKDQSR=>eclkdqsr1, DDRLAT=>ddrlat1, DDRCLKPOL=>ddrclkpol1, 
            QA0=>qa05, QB0=>qb05, QA1=>qa15, QB1=>qb15);

    Inst_IDDRX2D_0_4: IDDRX2D
        generic map (DELAYMODE=> "CENTERED", SCLKLATENCY=>  1)
        port map (D=>datain_t4, SCLK=>clkok, ECLK=>clkos, 
            ECLKDQSR=>eclkdqsr0, DDRLAT=>ddrlat0, DDRCLKPOL=>ddrclkpol0, 
            QA0=>qa04, QB0=>qb04, QA1=>qa14, QB1=>qb14);

    Inst_IDDRX2D_0_3: IDDRX2D
        generic map (DELAYMODE=> "CENTERED", SCLKLATENCY=>  1)
        port map (D=>datain_t3, SCLK=>clkok, ECLK=>clkos, 
            ECLKDQSR=>eclkdqsr0, DDRLAT=>ddrlat0, DDRCLKPOL=>ddrclkpol0, 
            QA0=>qa03, QB0=>qb03, QA1=>qa13, QB1=>qb13);

    Inst_IDDRX2D_0_2: IDDRX2D
        generic map (DELAYMODE=> "CENTERED", SCLKLATENCY=>  1)
        port map (D=>datain_t2, SCLK=>clkok, ECLK=>clkos, 
            ECLKDQSR=>eclkdqsr0, DDRLAT=>ddrlat0, DDRCLKPOL=>ddrclkpol0, 
            QA0=>qa02, QB0=>qb02, QA1=>qa12, QB1=>qb12);

    Inst_IDDRX2D_0_1: IDDRX2D
        generic map (DELAYMODE=> "CENTERED", SCLKLATENCY=>  1)
        port map (D=>datain_t1, SCLK=>clkok, ECLK=>clkos, 
            ECLKDQSR=>eclkdqsr0, DDRLAT=>ddrlat0, DDRCLKPOL=>ddrclkpol0, 
            QA0=>qa01, QB0=>qb01, QA1=>qa11, QB1=>qb11);

    Inst_IDDRX2D_0_0: IDDRX2D
        generic map (DELAYMODE=> "CENTERED", SCLKLATENCY=>  1)
        port map (D=>datain_t0, SCLK=>clkok, ECLK=>clkos, 
            ECLKDQSR=>eclkdqsr0, DDRLAT=>ddrlat0, DDRCLKPOL=>ddrclkpol0, 
            QA0=>qa00, QB0=>qb00, QA1=>qa10, QB1=>qb10);

    Inst4_DQSBUFD1: DQSBUFD
        generic map (NRZMODE=> "DISABLED", DYNDEL_VAL=>  0, DYNDEL_CNTL=> "DYNAMIC", 
        DYNDEL_TYPE=> "NORMAL")
        port map (DQSI=>buf_clk_1, SCLK=>clkok, READ=>reset_1, 
            DQSDEL=>dqsdel, ECLK=>clkos, ECLKW=>clkos, RST=>reset_1, 
            DYNDELPOL=>scuba_vlo, DYNDELAY6=>scuba_vlo, 
            DYNDELAY5=>scuba_vlo, DYNDELAY4=>scuba_vlo, 
            DYNDELAY3=>scuba_vlo, DYNDELAY2=>scuba_vlo, 
            DYNDELAY1=>scuba_vlo, DYNDELAY0=>scuba_vlo, DQSW=>dqsw1, 
            DDRCLKPOL=>ddrclkpol1, PRMBDET=>prmbdet1, 
            DATAVALID=>datavalid1, DDRLAT=>ddrlat1, ECLKDQSR=>eclkdqsr1, 
            DQCLK0=>dqclk01, DQCLK1=>dqclk11);

    scuba_vlo_inst: VLO
        port map (Z=>scuba_vlo);

    Inst4_DQSBUFD0: DQSBUFD
        generic map (NRZMODE=> "DISABLED", DYNDEL_VAL=>  0, DYNDEL_CNTL=> "DYNAMIC", 
        DYNDEL_TYPE=> "NORMAL")
        port map (DQSI=>buf_clk_0, SCLK=>clkok, READ=>reset_0, 
            DQSDEL=>dqsdel, ECLK=>clkos, ECLKW=>clkos, RST=>reset_0, 
            DYNDELPOL=>scuba_vlo, DYNDELAY6=>scuba_vlo, 
            DYNDELAY5=>scuba_vlo, DYNDELAY4=>scuba_vlo, 
            DYNDELAY3=>scuba_vlo, DYNDELAY2=>scuba_vlo, 
            DYNDELAY1=>scuba_vlo, DYNDELAY0=>scuba_vlo, DQSW=>dqsw0, 
            DDRCLKPOL=>ddrclkpol0, PRMBDET=>prmbdet0, 
            DATAVALID=>datavalid0, DDRLAT=>ddrlat0, ECLKDQSR=>eclkdqsr0, 
            DQCLK0=>dqclk00, DQCLK1=>dqclk10);

    Inst3_DQSDLLB: DQSDLLB
        generic map (LOCK_SENSITIVITY=> "LOW")
        port map (CLK=>clkos, RST=>dqsdll_reset, 
            UDDCNTLN=>dqsdll_uddcntln, LOCK=>dqsdll_lock, DQSDEL=>dqsdel);

    scuba_vhi_inst: VHI
        port map (Z=>scuba_vhi);

    Inst2_CLKDIVB: CLKDIVB
        port map (CLKI=>eclk, RST=>clkdiv_reset, RELEASE=>scuba_vhi, 
            CDIV1=>cdiv1, CDIV2=>clkok, CDIV4=>cdiv4, CDIV8=>cdiv8);

    Inst1_IB1: IB
        port map (I=>clk_1, O=>buf_clk_1);

    Inst1_IB0: IB
        port map (I=>clk_0, O=>buf_clk_0);

    q_1(19) <= qb19;
    q_1(18) <= qb18;
    q_1(17) <= qb17;
    q_1(16) <= qb16;
    q_1(15) <= qb15;
    q_1(14) <= qa19;
    q_1(13) <= qa18;
    q_1(12) <= qa17;
    q_1(11) <= qa16;
    q_1(10) <= qa15;
    q_1(9) <= qb09;
    q_1(8) <= qb08;
    q_1(7) <= qb07;
    q_1(6) <= qb06;
    q_1(5) <= qb05;
    q_1(4) <= qa09;
    q_1(3) <= qa08;
    q_1(2) <= qa07;
    q_1(1) <= qa06;
    q_1(0) <= qa05;
    datain_t9 <= datain_1i_t4;
    datain_t8 <= datain_1i_t3;
    datain_t7 <= datain_1i_t2;
    datain_t6 <= datain_1i_t1;
    datain_t5 <= datain_1i_t0;
    q_0(19) <= qb14;
    q_0(18) <= qb13;
    q_0(17) <= qb12;
    q_0(16) <= qb11;
    q_0(15) <= qb10;
    q_0(14) <= qa14;
    q_0(13) <= qa13;
    q_0(12) <= qa12;
    q_0(11) <= qa11;
    q_0(10) <= qa10;
    q_0(9) <= qb04;
    q_0(8) <= qb03;
    q_0(7) <= qb02;
    q_0(6) <= qb01;
    q_0(5) <= qb00;
    q_0(4) <= qa04;
    q_0(3) <= qa03;
    q_0(2) <= qa02;
    q_0(1) <= qa01;
    q_0(0) <= qa00;
    datain_t4 <= datain_0i_t4;
    datain_t3 <= datain_0i_t3;
    datain_t2 <= datain_0i_t2;
    datain_t1 <= datain_0i_t1;
    datain_t0 <= datain_0i_t0;
    dqsdll_uddcntln <= scuba_vhi;
    dqsdll_reset <= scuba_vhi;
    clkos <= eclk;
    sclk_t <= clkok;
    sclk <= sclk_t;
end Structure;

-- synopsys translate_off
library ecp3;
configuration Structure_CON of dqsinput is
    for Structure
        for all:VHI use entity ecp3.VHI(V); end for;
        for all:VLO use entity ecp3.VLO(V); end for;
        for all:IB use entity ecp3.IB(V); end for;
        for all:CLKDIVB use entity ecp3.CLKDIVB(V); end for;
        for all:IDDRX2D use entity ecp3.IDDRX2D(V); end for;
        for all:DQSBUFD use entity ecp3.DQSBUFD(V); end for;
        for all:DQSDLLB use entity ecp3.DQSDLLB(V); end for;
        for all:DELAYC use entity ecp3.DELAYC(V); end for;
    end for;
end Structure_CON;

-- synopsys translate_on
